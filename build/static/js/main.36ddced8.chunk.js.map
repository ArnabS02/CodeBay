{"version":3,"sources":["hooks/useLocalStorage.js","components/Editor.js","components/App.js","index.js"],"names":["useLocalStorage","key","initialValue","prefixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","Editor","props","language","nameoflang","onChange","open","setOpen","className","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","lineNumbers","autocorrect","theme","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAIe,SAASA,EAAgBC,EAAKC,GAC3C,IAAMC,EAHO,iBAGgBF,EAE7B,EAA0BG,oBAAS,WACjC,IAAMC,EAAYC,aAAaC,QAAQJ,GACvC,OAAiB,MAAbE,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBH,EACFA,IAEAA,KAPX,mBAAOQ,EAAP,KAAcC,EAAd,KAeA,OAJAC,qBAAU,WACRN,aAAaO,QAAQV,EAAaK,KAAKM,UAAUJ,MAChD,CAACP,EAAaO,IAEV,CAACA,EAAOC,G,gECJF,SAASI,EAAQC,GAC5B,IACIC,EAIAD,EAJAC,SACAC,EAGAF,EAHAE,WACAR,EAEAM,EAFAN,MACAS,EACAH,EADAG,SAEJ,EAAwBf,oBAAS,GAAjC,mBAAOgB,EAAP,KAAaC,EAAb,KAIA,OACI,sBAAKC,UAAS,2BACOF,EAAO,GAAK,YADnB,KAAd,UAII,sBAAKE,UAAY,eAAjB,UACKJ,EACD,wBACAI,UAAY,MACZC,QACI,kBAAMF,GAAQ,SAAAG,GAAQ,OAAMA,MAHhC,SAMI,cAAC,IAAD,CACGC,KAASL,EAAOM,IAAgBC,WAK3C,cAAC,aAAD,CACAC,eAvBR,SAAuBC,EAAQC,EAAMpB,GACjCS,EAAST,IAuBLA,MAASA,EACTY,UAAY,sBACZS,QACI,CACIC,cAAe,EACfC,MAAO,EACPC,KAAOjB,EACPkB,aAAc,EACdC,aAAc,EACdC,MAAQ,iBCmBbC,MA3Ef,WAKI,MAAwBtC,EAAgB,OAAQ,IAAhD,mBAAOuC,EAAP,KAAaC,EAAb,KACA,EAAsBxC,EAAgB,MAAO,IAA7C,mBAAOyC,EAAP,KAAYC,EAAZ,KACA,EAAoB1C,EAAgB,KAAM,IAA1C,mBAAO2C,EAAP,KAAWC,EAAX,KACA,EAA4BxC,mBAAS,KAArC,mBAAOyC,EAAP,KAAeC,EAAf,KAgBA,OAdAlC,qBAAW,WACP,IAAMmC,EAAUC,YAAW,WACvBF,EAAS,+DAEQP,EAFR,iDAGSE,EAHT,mDAIUE,EAJV,yDAQV,KACH,OAAO,kBAAMM,aAAcF,MAC5B,CAACR,EAAME,EAAKE,IAGX,qCACI,qBAAKrB,UAAY,SAAjB,SACI,oBAAIA,UAAY,OAAhB,2BAIJ,sBAAKA,UAAY,gBAAjB,UACI,cAACP,EAAD,CACAE,SAAW,MACXC,WAAa,OACbR,MAAS6B,EACTpB,SAAYqB,IAEZ,cAACzB,EAAD,CACAE,SAAW,MACXC,WAAa,MACbR,MAAS+B,EACTtB,SAAYuB,IAEZ,cAAC3B,EAAD,CACAE,SAAW,aACXC,WAAa,KACbR,MAASiC,EACTxB,SAAYyB,OAGhB,qBAAKtB,UAAY,OAAjB,SACG,0CAIH,qBAAKA,UAAY,OAAjB,SACI,wBACAuB,OAAUA,EACVK,MAAQ,SACRC,QAAU,gBACVC,YAAY,IACZC,MAAQ,OACRC,OAAS,WAGb,qBAAKhC,UAAY,SAAjB,SACI,uIClEhBiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.36ddced8.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nconst PREFIX = 'codepen-clone-'\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n  const prefixedKey = PREFIX + key\r\n\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey)\r\n    if (jsonValue != null) return JSON.parse(jsonValue)\r\n\r\n    if (typeof initialValue === 'function') {\r\n      return initialValue()\r\n    } else {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n  }, [prefixedKey, value])\r\n\r\n  return [value, setValue]\r\n}","import React, { useState } from \"react\"\r\n// importing the codemirror libraries....\r\nimport \"codemirror/lib/codemirror.css\"\r\nimport \"codemirror/theme/material.css\"\r\n// for html files\r\nimport \"codemirror/mode/xml/xml\"\r\n// for javascript files\r\nimport \"codemirror/mode/javascript/javascript\"\r\n// for css files\r\nimport \"codemirror/mode/css/css\"\r\nimport { Controlled as Controllededitor } from \"react-codemirror2\"\r\n// for opening and closing icon's\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faCompressAlt, faExpandAlt } from \"@fortawesome/free-solid-svg-icons\"\r\n// nameoflang for the language name\r\n// language -> LANGUAGE USE IN EDITOR\r\n// nameoflang -> HANDLING THE NAME..\r\n// value and onChange -> HANDLING VALUES BEFORE AND //AFTER CHANGE \r\nexport default function Editor (props) {\r\n    const {\r\n        language,\r\n        nameoflang,\r\n        value,\r\n        onChange\r\n    } = props\r\n    const [open, setOpen] = useState(true)\r\n    function handlechange (editor, data, value) {\r\n        onChange(value)\r\n    }\r\n    return (\r\n        <div className =  \r\n        {`editor_container ${open ? '' : 'collapsed' } `}\r\n        >\r\n            {/* giving it an extra class when editor is closed */}\r\n            <div className = \"editor_title\" >\r\n                {nameoflang}\r\n                <button\r\n                className = \"btn\"\r\n                onClick = { \r\n                    () => setOpen(prevOpen => ! prevOpen)\r\n                }\r\n                >\r\n                    <FontAwesomeIcon \r\n                       icon = { open ? faCompressAlt : faExpandAlt }\r\n                    />\r\n                </button>\r\n                {/* for increasing and decreasing the size of the editor */}\r\n            </div>\r\n            <Controllededitor \r\n            onBeforeChange = {handlechange}\r\n            value = {value}\r\n            className = \"code_mirror_wrapper\"\r\n            options = {\r\n                {\r\n                    lineWrapping : true,\r\n                    lint : true,\r\n                    mode : language,\r\n                    lineNumbers : true,\r\n                    autocorrect : true,\r\n                    theme : \"material\"\r\n                }\r\n            }\r\n            />\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from \"react\"\r\nimport useLocalStorage from \"../hooks/useLocalStorage\"\r\nimport Editor from \"./Editor\"\r\nfunction App () {\r\n    // Editor is the custom components for basic inputs.....\r\n    // iframe for rendering output...\r\n    // timeout for gap between writing in text editor and showing the output on the screen\r\n\r\n    const [html, setHtml] = useLocalStorage('html', '')\r\n    const [css, setCss] = useLocalStorage('css', '')\r\n    const [js, setJs] = useLocalStorage('js', '')\r\n    const [srcDoc, setSrcDoc] = useState(' ')\r\n\r\n    useEffect (() => {\r\n        const timeout = setTimeout(() => {\r\n            setSrcDoc ( `\r\n                <html>\r\n                    <body> ${html} </body>\r\n                    <style> ${css} </style>\r\n                    <script> ${js} </script>\r\n                </html>\r\n            `\r\n            )\r\n        }, 1000);\r\n        return () => clearTimeout (timeout)\r\n    }, [html, css, js]\r\n    )\r\n    return (\r\n        <>\r\n            <div className = \"header\" >\r\n                <h2 className = \"name\" >\r\n                &lt;/&gt; CodeBay\r\n                </h2>\r\n            </div>\r\n            <div className = \"pane top-pane\" >\r\n                <Editor \r\n                language = \"xml\"\r\n                nameoflang = \"HTML\"\r\n                value = {html}\r\n                onChange = {setHtml}\r\n                />  \r\n                <Editor \r\n                language = \"css\"\r\n                nameoflang = \"CSS\"\r\n                value = {css}\r\n                onChange = {setCss}\r\n                />\r\n                <Editor \r\n                language = \"javascript\"\r\n                nameoflang = \"JS\"\r\n                value = {js}\r\n                onChange = {setJs}\r\n                />\r\n            </div>\r\n            <div className = \"h333\" >\r\n               <h3>\r\n                   Output\r\n               </h3>\r\n            </div>\r\n            <div className = \"pane\" >\r\n                <iframe \r\n                srcDoc = {srcDoc}\r\n                title = \"output\"\r\n                sandbox = \"allow-scripts\"  \r\n                frameBorder=\"0\"\r\n                width = \"100%\"\r\n                height = \"100%\"\r\n                />\r\n            </div>\r\n            <div className = \"footer\" >\r\n                <footer>\r\n                    Project developed by @MarkupCoders -\r\n                    Rajdeep Kundu, Abhirup Kabiraj, Arnab Seth, Mainak Das\r\n                </footer>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default App","import React from 'react'\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./components/App\"\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}